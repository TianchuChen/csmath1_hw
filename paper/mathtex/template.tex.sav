\documentclass[10pt,a4paper]{article}
\usepackage{times}                       % 使用 Times New Roman 字体
\usepackage{CJK,CJKnumb,CJKulem}         % 中文支持宏包
\usepackage{color}                       % 支持彩色

\usepackage{comment}
\usepackage{amsmath}
\usepackage{amssymb}
\usepackage{amsthm}
\usepackage{amscd}
\usepackage{graphicx}
\usepackage{indentfirst}
\usepackage{titlesec}
\usepackage[top=25.4mm, bottom=25.4mm, left=31.7mm, right=32.2mm]{geometry}

%页面设置
\begin{CJK*}{GBK}{hei}
%\theoremstyle{definition}
%\newtheoremstyle{mythm}{1.5ex plus 1ex minus .2ex}{1.5ex plus 1ex minus .2ex}
%   {\kai}{\parindent}{\song\bfseries}{}{1em}{}
\newtheoremstyle{mythm}{1ex}{1ex}% 定理环境的上下间距.
{\CJKfamily{song}}{\parindent}{\CJKfamily{hei} \bf}{}{1em}{}%定理内容为宋体, 缩进, 定理名称为黑粗体
\theoremstyle{mythm}%设置定理环境
\newtheorem{thm}{定理~}[section]
\newtheorem{lem}[thm]{引理~}
\newtheorem{pro}[thm]{性质~}
\newtheorem{fact}[thm]{Fact}
\newtheorem{prop}[thm]{命题~}
\newtheorem{ques}[thm]{问题~}
\newtheorem{cor}[thm]{推论~}
\newtheorem{de}[thm]{定义~}
\newtheorem{rem}[thm]{注记~}
\numberwithin{equation}{section}
\end{CJK*}
\renewcommand\refname{\CJKfamily{hei} 参考文献}
%\renewcommand{\abstractname}{摘要}
%%%%%%%%%%%%%%%%下面几行用于改变证明环境的定义
\makeatletter
\renewenvironment{proof}[1][\proofname]{\par
\pushQED{\qed}%
\normalfont \topsep6\p@\@plus6\p@ \labelsep1em\relax
\trivlist
\item[\hskip\labelsep\indent
\bfseries #1]\ignorespaces
}{%
\popQED\endtrivlist\@endpefalse
}
\makeatother
%%%%%%%%%%%%%%(http://latex.yo2.cn)
\renewcommand{\proofname}{\CJKfamily{hei} 证明}

\renewcommand{\thefootnote}{\fnsymbol{footnote}}
%\titleformat{\section}{\CJKfamily{hei} }{\arabic{section}{1em}{}
\titleformat{\section}{\large \bf \CJKfamily{hei} }{{\bf \thesection\space}}{0pt}{}

\begin{document}
%\setlength{\baselineskip}{1ex}% 设置行距
\setlength{\abovedisplayskip}{1ex} %设置公式上边间距
\setlength{\belowdisplayskip}{1ex} %设置公式下边间距
\begin{CJK*}{GBK}{song}

\author{陈天楚 (0112922)}                                 % 作者
\title{使用t-SNE进行数据可视化}              % 题目
\maketitle                                           % 生成标题

\section{引言}
TEX是由图灵奖得主Knuth编写的计算机程序，用于文章和数学公式的排版。
1977年Knuth开始编写TEX排版系统引擎的时候，
是为了探索当时正开始进入出版工业的数字印刷设备的潜力。他特别希望能因此扭转那种排版质量下降的趋势，
使自己写的{\CJKfamily{hei}书和文章}免受其害。

%\clearpage % 换页，\newpage也可以，推荐\clearpage
我们现在使用的TEX系统是在1982年发布的，1989 年又略作改进，增进了
对8字节字符和多语言的支持。TEX以具有优异的稳定性，可以在各种不同
类型的计算机上运行，以及几乎没有错误而著称。

高维数据的可视化是在很多领域中都是一个比较重要的问题。在最近几十年内，一些不同的可视化高维数据不断地被提出来。其中，部分较为有影响力技术类型包括基于图标形式的类型（例如Chenoff face――一种把多维数据用二维的人脸表示出来的方式）、基于像素点形式的类型、把高维数据通过图的顶点的形式表示出来的类型等等。大多数这种技术类型都是简单地提供一个能够显示多维数据的工具并将发现数据中的规律的工作留给人类观察者。这类技术在处理上千维的真实世界中的高维数据时严重地受到限制。

和上文所述的数据可视化方案相比，基于降维的方法可以将高维度的数据转换成二维和三维的数据，这类数据可以用散点图表示。其中，降维的目标是在将高维数据映射到低维度的数据时，尽可能地保存高维数据中明显的架构图。为了解决这个问题提出了很多降维的方法。传统的线性降维方法如PCA等的目标是让不相似的数据点在低维度的表达下距离较远。与之相对的是，在处理一些分布在低维度附近的高维数据点时，一些非线性的降维方法更倾向于使得一些相似的数据点在低维度的表达下能有较近的距离，这通常是线性降维方法难以做到的。

有许多非线性的降维方法以保留数据的局部结构为目标被提出。尽管有些方法在人工合成的测试数据上有优秀的效果，但这些方法经常在可视化高维的真实数据时不是那么成功。实际上，大多数这样的方法没有能力在一个映射中同时保留数据局部和全局的结构。

论文介绍了一种将高维数据转换成一个相似度矩阵的方法，在此基础上提出了一种新的技术“t-SNE”用于可视化所产生的相似度矩阵。 t-SNE 有能力尽可能捕捉到高维数据的局部特征，同时能够反映数据的全局特征（例如：簇的存在）。论文比较了t-SNE和其他集中降维方法在物种数据集上的表现。

作为计算机应用数学的作业，本文主要内容包括介绍SNE作为t-SNE方法的基础、介绍t-SNE和SNE的区别及t-SNE的具体实现方式。除此之外，本文通过Python实现了一个用于演示t-SNE方法的工具，生成了一些高维数据并测试其结果。

\section{SNE方法简介}
SNE首先将高维数据点之间的欧式距离转换成用于代表相似度的条件概率。数据点$x_j$到$x_i$的相似度为条件概率$P_{j|i}$。$P_{j|i}$指的是如果按照以$x_i$为中心的高斯分布选择相邻的点，$x_i$和$x_j$相邻的概率。对于距离比较近的点对，$P_{j|i}$比较高。$P_{j|i}$通过下列方式计算得到：

$p_{j|i} = \frac{exp(-\left \| x_i-x_j \right \|^{2}/2\sigma_{i}^{2})}{\sum_{k\neq i}exp(-\left \| x_i-x_k \right \|^{2}/2\sigma_{i}^{2})}$

$\sigma_{i}$是高斯分布的方差（在下文会解释如何计算）。由于我们只考虑不同点之间的相似度，所以我们设置$p_{i|i}=0$。对于$x_i$、$x_j$对应的低维点$y_i$、$y_j$，可以用类似的方法计算$q_{j|i}$，由于可以把高斯分布的方差设置为一个固定的值（设置为不同的值只会导致结果的尺度不同），$q_{j|i}$可以写成下列形式：

$q_{j|i} = \frac{exp(-\left \| y_i-y_j \right \|^{2})}{\sum_{k\neq i}exp(-\left \| y_i-y_k \right \|^{2})}$
$q_{i|i}=0$。

理想的情况下，如果$y_i$和$y_j$可以正确表达高维的$x_i$和$x_j$的相似度，那么$p_{j|i}$和$q_{j|i}$ 应该相等。基于这个想法，SNE的目标就是寻找一些低维点使得$p_{j|i}$和$q_{j|i}$间的差距尽可能的小。SNE以减少所有点的K-L距离总和为目标，使用梯度下降法达到这一目的，目标函数C 的定义为：

$C = \sum_{i} KL(P_i \| Q_i) = \sum_{i} \sum{j} p_{j|i}log\frac{p_{j|i}}{q_{j|i}}$

由于K-L距离具有不对称性，不同类型的差距没有被平等地考虑。实际上SNE的目标函数更加重视保留数据的局部特征。

为了决定所有数据点的$\sigma_i$，SNE使用一个二分查找的方法，为每个点$x_i$找到一个能够产生与用户输入的困惑度最为相似的$\sigma_i$。困惑度的计算方式如下：

$Perp(P_i) = 2^{H(P_i)} = - \sum _j p_{j|i} log_{2} p_{j|i}$

用户输入的困惑度可以认为是一个控制邻居点的数量的平滑参数。

尽管SNE能够做出看上去合理的数据可视化，但SNE仍然存在目标函数不容易被优化的问题，以及被称作“Crowding Problem”的问题。
在一些情况下，两个高维点之间的距离不能被一个低维的映射所正确表达。例如当数据以一个点为中心均匀地分布在高维空间中的一个“球体”时，试图通过点之间的距离将其映射到二维空间会出现所谓的“Crowding Problem”问题：二维映射中用于表示相互远离的点的面积和用于表达相互靠近的点的面积相比显得不够大，因此如果想要在映射中更准确地表示相互靠近的店，距离适中的点对就必须在二维映射中变得十分远。

\section{t-SNE方法概述}
%\CJKfamily{fs}
%中文部分，可以中英文混合
%
%\CJKfamily{hei}
%中文部分，可以中英文混合
%土
%\CJKfamily{li}
%中文部分，可以中英文混合
%
%\CJKfamily{kai}
%中文部分，可以中英文混合
%
%\CJKfamily{song}
%中文部分，可以中英文混合
为了解决SNE中存在的“Crowding Problem”。t-SNE在高维中使用了


\section{实验结果}

\section{小结与讨论}

\begin{thebibliography}{MM}
\addtolength{\itemsep}{-0.5em}
\begin{small}
\bibitem{no} text
\bibitem{no} text
\end{small}
\end{thebibliography}
\newpage
\end{CJK*}
\end{document}

